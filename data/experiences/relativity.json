{
    "full": "Relativity Space",
    "short": "relativity",
    "img": "./relativity-logo.svg",
    "position": "Software Engineer Intern",
    "tech": ["Docker", "Python", "Rust", "React + Vite", "TypeScript", "GitLab CI"], 
    "startDate":"May 2024",
    "endDate":"Present",
    "skills":["cunting"],
    "blurb":   "I had the opportunity to work at Relativity Space one summer.",
    "summary": "Developed evaluators for HITL and HOOTL testing.",
    "description": "After graduating, I moved back home and began working as a Software Engineer intern at Relativity Space. The company’s mission is to redefine “the rules of rocketry,” and in 2021, the company launched the world’s first 3D-printed rocket. The company now is preparing for the launch of the Terran R in 2026.\n\nWhen I first joined the team, the project my mentor and the team had planned was scrapped just fifteen minutes before I arrived. Following some shifts in leadership, I spent the first three weeks working on various tasks across different divisions within the team.\n\nDuring this time, I wrote Python evaluators for our Hardware-in-the-Loop (HITL) and Hardware-out-of-the-Loop (HOOTL) testing system, GlaDos. Additionally, I contributed to the development of the Proxy that facilitates communication between the flight computer and ground command, which involved learning Rust to implement about 50 lines of code.\n\nAround the three-week mark, I was assigned a new project: Aperture Web. Aperture serves as a repository for all configurations and specifications related to flight components for Terran R. This data is organized into hundreds of JSON files, each containing references to other JSON files. However, the existing Aperture system was not user-friendly for those outside of the development team. Since these configurations and specifications are essential for most teams at Relativity, it became clear that improved accessibility was necessary.\n\nAperture Web aims to address this issue by providing a web application that allows users to explore and find information on specific flight components in a more intuitive and concise manner. My boss provided minimal direction, simply stating the desired outcome without dictating the approach. However, there was particular hesitancy about making the application fully full-stack due to concerns about overhead costs and management.\n\nTo start, I met with various engineers at Relativity to understand what an engineer in the propulsion or testing would look for in Aperture and how best to present that information. I also scheduled meetings with colleagues who had previously developed applications within the company for guidance on how to proceed.\n\nOver the course of seven weeks, I was able to successfully deliver a full-stack application that met the needs of the users and improved accessibility to the crucial configuration data. I took into consideration my boss’ hesitancy of a backend and developed a simple Python backend that simply just serves files that the client is requesting. Thus, if the structure of data changes, the backend would be completely benign to those changes since there is no post or pre-processing of data that the client is requesting.\n\nThe client application is a React + Vite + Typescript application which uses Relativities style template and leverages MUI components. This was my first time developing with React + Vite + Typescript and found it a great experience and one that reminded me joy and excitement of learning new technologies in software development.\n\nI gained an incredible amount of knowledge during my time at Relativity. I learned Rust, how to leverage GitLab CI, a very basic understanding of what an R-Controller is, and proficiency in React, Vite, and TypeScript. However, I would say the most valuable skill I acquired was project management. As the sole developer and designer of Aperture Web—a tool intended for company-wide use—I had to approach software development in a way I had never considered before.\n\nBeing aware that I was not the primary audience for my application presented a unique challenge. It required me to navigate a learning curve regarding the content I was delivering and how to present that information effectively. This experience has fundamentally changed my perspective on software development and the importance of user-centric design. \n\nI want to take the space to acknowledge some people at Relativity who really shaped my experience. Ahmed Alhag on the Data Platform team who was instrumental in developing the architecture of Aperture Web. Alyssa Robertson, the Project Manager of my team who sat with me and helped me develop the UI, and my mentor Carla Corl who supported me throughout my time at Relativity."
}
   
  