{
    "full": "Relativity Space",
    "short": "relativity",
    "img": "./relativity-logo.svg",
    "position": "Software Engineer Intern",
    "tech": ["Docker", "Python", "Rust", "React + Vite", "TypeScript", "GitLab CI"], 
    "startDate":"May 2024",
    "endDate":"Present",
    "skills":["cunting"],
    "blurb":   "I had the opportunity to work at Relativity Space one summer.",
    "summary": "Developed evaluators for HITL and HOOTL testing.",
    "description": "In August 2022, I embarked on a rewarding journey as a Teaching Assistant for Advanced Programming in C at Columbia University's Computer Science Department. This role provided me with the unique opportunity to support and mentor over 800 students in their programming endeavors. My responsibilities were extensive, encompassing assistance with programming languages such as C, BASH, and UNIX, as well as TCP/IP networking. I offered this support through multiple channels, including email consultations, weekly office hours, and leading two comprehensive review sessions. These interactions allowed me to provide personalized guidance, helping students overcome their challenges and deepening their understanding of complex programming concepts.\n\nEarly on, I recognized the need for practical and accessible learning resources to enhance student proficiency. To address this, I collaborated closely with instructors and course staff to develop a series of comprehensive guides. These guides, which were made available on GitHub, covered essential topics such as effective Vim use and SSH-key generation practices. This collaborative effort resulted in a significant increase in student proficiency, with a noted 40% improvement in key technical skills. By providing these resources, we ensured that students had the necessary tools to succeed in their coursework and future careers.\n\nA significant challenge I encountered was the manual and time-consuming grading process for a large number of code submissions. To streamline this process and enhance efficiency, I developed an automated Python grading script. This script was designed to handle the grading of approximately 400 code submissions, optimizing the process by about 75%. The automation not only sped up the grading process but also significantly increased grade accuracy and consistency. This innovation ensured that students received timely and fair assessments, allowing them to focus on learning and improvement.\n\nMy role as a Teaching Assistant wasn't confined to technical support alone. I actively participated in the development of the course curriculum and worked closely with instructors to ensure that the course content was aligned with the latest industry standards. This experience honed my ability to communicate complex technical concepts to a diverse group of students, ensuring that the solutions I provided were both effective and comprehensible.\n\nWorking as a Teaching Assistant at Columbia University has been an incredibly rewarding experience, providing me with a unique perspective on the intersection of education and technology. It has also equipped me with valuable skills in technical support, resource development, and process automation, all of which are crucial for handling large-scale educational tasks. The knowledge and experience I gained here have laid a strong foundation for my future endeavors in software engineering and beyond."
}
   
  